version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: ecommerce-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
      - MONGO_INITDB_DATABASE=ecommerce
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ecommerce-network

  # MERN Ecommerce Application
  app:
    build: .
    container_name: ecommerce-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://admin:admin123@mongodb:27017/ecommerce?authSource=admin
      - JWT_SECRET=your_super_secret_jwt_key_minimum_32_characters_long
      - JWT_EXPIRE=30d
      - PORT=5000
    depends_on:
      - mongodb
    volumes:
      - uploads_data:/app/uploads
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: ecommerce-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - ecommerce-network

volumes:
  mongodb_data:
    driver: local
  uploads_data:
    driver: local

networks:
  ecommerce-network:
    driver: bridge